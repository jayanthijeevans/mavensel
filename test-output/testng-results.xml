<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="4" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-27T13:25:42 IST" name="Default suite" finished-at="2024-05-27T13:25:57 IST" duration-ms="15577">
    <groups>
      <group name="test2">
        <method signature="TestCode.FailedTC()[pri:0, instance:TestListener.TestCode@384ad17b]" name="FailedTC" class="TestListener.TestCode"/>
        <method signature="TestLisCode.FailedTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" name="FailedTC" class="listenerDemo.TestLisCode"/>
      </group> <!-- test2 -->
      <group name="test3">
        <method signature="TestCode.SkippeTC()[pri:0, instance:TestListener.TestCode@384ad17b]" name="SkippeTC" class="TestListener.TestCode"/>
        <method signature="TestLisCode.SkippeTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" name="SkippeTC" class="listenerDemo.TestLisCode"/>
      </group> <!-- test3 -->
      <group name="test1">
        <method signature="TestCode.passTC()[pri:0, instance:TestListener.TestCode@384ad17b]" name="passTC" class="TestListener.TestCode"/>
        <method signature="TestLisCode.passTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" name="passTC" class="listenerDemo.TestLisCode"/>
      </group> <!-- test1 -->
    </groups>
    <test started-at="2024-05-27T13:25:42 IST" name="Default test" finished-at="2024-05-27T13:25:57 IST" duration-ms="15577">
      <class name="TestListener.TestCode">
        <test-method is-config="true" signature="bfc()[pri:0, instance:TestListener.TestCode@384ad17b]" started-at="2024-05-27T13:25:34 IST" name="bfc" finished-at="2024-05-27T13:25:42 IST" duration-ms="7614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfc -->
        <test-method signature="Intialise()[pri:0, instance:TestListener.TestCode@384ad17b]" started-at="2024-05-27T13:25:42 IST" name="Intialise" finished-at="2024-05-27T13:25:51 IST" duration-ms="8844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Intialise -->
        <test-method signature="FailedTC()[pri:0, instance:TestListener.TestCode@384ad17b]" started-at="2024-05-27T13:25:51 IST" name="FailedTC" finished-at="2024-05-27T13:25:51 IST" duration-ms="645" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestListener.TestCode.FailedTC(TestCode.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailedTC -->
        <test-method signature="passTC()[pri:0, instance:TestListener.TestCode@384ad17b]" started-at="2024-05-27T13:25:52 IST" name="passTC" finished-at="2024-05-27T13:25:52 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTC -->
        <test-method signature="SkippeTC()[pri:0, instance:TestListener.TestCode@384ad17b]" started-at="2024-05-27T13:25:57 IST" name="SkippeTC" depends-on-groups="test2" finished-at="2024-05-27T13:25:57 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCode.SkippeTC()[pri:0, instance:TestListener.TestCode@384ad17b] depends on not successfully finished methods in group "test2"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCode.SkippeTC()[pri:0, instance:TestListener.TestCode@384ad17b] depends on not successfully finished methods in group "test2"
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SkippeTC -->
      </class> <!-- TestListener.TestCode -->
      <class name="listenerDemo.TestLisCode">
        <test-method signature="f()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" started-at="2024-05-27T13:25:52 IST" name="f" finished-at="2024-05-27T13:25:52 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="FailedTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" started-at="2024-05-27T13:25:52 IST" name="FailedTC" finished-at="2024-05-27T13:25:57 IST" duration-ms="5898" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at listenerDemo.TestLisCode.FailedTC(TestLisCode.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailedTC -->
        <test-method signature="passTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" started-at="2024-05-27T13:25:57 IST" name="passTC" finished-at="2024-05-27T13:25:57 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTC -->
        <test-method signature="SkippeTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95]" started-at="2024-05-27T13:25:57 IST" name="SkippeTC" depends-on-groups="test2" finished-at="2024-05-27T13:25:57 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestLisCode.SkippeTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95] depends on not successfully finished methods in group "test2"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestLisCode.SkippeTC()[pri:0, instance:listenerDemo.TestLisCode@50ecde95] depends on not successfully finished methods in group "test2"
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SkippeTC -->
      </class> <!-- listenerDemo.TestLisCode -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
